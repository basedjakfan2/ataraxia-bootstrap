From eadaff6a259868cd10fa883f42ff76986324401b Mon Sep 17 00:00:00 2001
From: Taylor Berlioz <nagakamira@gmail.com>
Date: Sun, 26 Jun 2022 15:56:56 -0700
Subject: [PATCH 3/3] use rv*imac abi for RISC-V by default

Signed-off-by: Taylor Berlioz <nagakamira@gmail.com>
---
 lib/Driver/ToolChains/Arch/RISCV.cpp | 20 ++++----------------
 1 file changed, 4 insertions(+), 16 deletions(-)

diff --git a/lib/Driver/ToolChains/Arch/RISCV.cpp b/lib/Driver/ToolChains/Arch/RISCV.cpp
index 7f040b6a..1dac86fa 100644
--- a/lib/Driver/ToolChains/Arch/RISCV.cpp
+++ b/lib/Driver/ToolChains/Arch/RISCV.cpp
@@ -202,15 +202,9 @@ StringRef riscv::getRISCVABI(const ArgList &Args, const llvm::Triple &Triple) {
   // - On `riscv{XLEN}-unknown-elf` we use the integer calling convention only.
   // - On all other OSs we use the double floating point calling convention.
   if (Triple.getArch() == llvm::Triple::riscv32) {
-    if (Triple.getOS() == llvm::Triple::UnknownOS)
-      return "ilp32";
-    else
-      return "ilp32d";
+    return "ilp32";
   } else {
-    if (Triple.getOS() == llvm::Triple::UnknownOS)
-      return "lp64";
-    else
-      return "lp64d";
+    return "lp64";
   }
 }
 
@@ -280,14 +274,8 @@ StringRef riscv::getRISCVArch(const llvm::opt::ArgList &Args,
   // - On `riscv{XLEN}-unknown-elf` we default to `rv{XLEN}imac`
   // - On all other OSs we use `rv{XLEN}imafdc` (equivalent to `rv{XLEN}gc`)
   if (Triple.getArch() == llvm::Triple::riscv32) {
-    if (Triple.getOS() == llvm::Triple::UnknownOS)
-      return "rv32imac";
-    else
-      return "rv32imafdc";
+    return "rv32imac";
   } else {
-    if (Triple.getOS() == llvm::Triple::UnknownOS)
-      return "rv64imac";
-    else
-      return "rv64imafdc";
+    return "rv64imac";
   }
 }
-- 
2.34.1

