From 1948b076537a26d7e4e387d5da72448937fec919 Mon Sep 17 00:00:00 2001
From: Taylor Berlioz <nagakamira@gmail.com>
Date: Sat, 2 Jul 2022 08:23:22 -0700
Subject: [PATCH 1/2] add support for Ataraxia GNU/Linux

Signed-off-by: Taylor Berlioz <nagakamira@gmail.com>
---
 include/clang/Driver/Distro.h   |  3 +++
 lib/Driver/Distro.cpp           |  3 +++
 lib/Driver/ToolChains/Linux.cpp | 14 +++++++++-----
 lib/Driver/ToolChains/Linux.h   |  4 ++++
 4 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/include/clang/Driver/Distro.h b/include/clang/Driver/Distro.h
index 2723f75e..43872acc 100644
--- a/include/clang/Driver/Distro.h
+++ b/include/clang/Driver/Distro.h
@@ -30,6 +30,7 @@ public:
     // the first and last known member in the family, e.g. IsRedHat().
     AlpineLinux,
     ArchLinux,
+    AtaraxiaLinux,
     DebianLenny,
     DebianSqueeze,
     DebianWheezy,
@@ -132,6 +133,8 @@ public:
 
   bool IsGentoo() const { return DistroVal == Gentoo; }
 
+  bool IsAtaraxiaLinux() const { return DistroVal == AtaraxiaLinux; }
+
   /// @}
 };
 
diff --git a/lib/Driver/Distro.cpp b/lib/Driver/Distro.cpp
index 5ac38c34..387026ab 100644
--- a/lib/Driver/Distro.cpp
+++ b/lib/Driver/Distro.cpp
@@ -197,6 +197,9 @@ static Distro::DistroType DetectDistro(llvm::vfs::FileSystem &VFS) {
   if (VFS.exists("/etc/gentoo-release"))
     return Distro::Gentoo;
 
+  if (VFS.exists("/etc/ataraxia-release"))
+    return Distro::AtaraxiaLinux;
+
   return Distro::UnknownDistro;
 }
 
diff --git a/lib/Driver/ToolChains/Linux.cpp b/lib/Driver/ToolChains/Linux.cpp
index 83cb4115..46d6858a 100644
--- a/lib/Driver/ToolChains/Linux.cpp
+++ b/lib/Driver/ToolChains/Linux.cpp
@@ -188,13 +188,13 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
 
   Distro Distro(D.getVFS(), Triple);
 
-  if (Distro.IsAlpineLinux() || Triple.isAndroid()) {
+  if (Distro.IsAlpineLinux() || Distro.IsAtaraxiaLinux() || Triple.isAndroid()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("now");
   }
 
   if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux() ||
-      Triple.isAndroid()) {
+      Distro.IsAtaraxiaLinux() || Triple.isAndroid()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("relro");
   }
@@ -206,6 +206,11 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
     ExtraOpts.push_back("max-page-size=4096");
   }
 
+  if (Triple.isAArch64() && Distro.IsAtaraxiaLinux()) {
+    ExtraOpts.push_back("-z");
+    ExtraOpts.push_back("max-page-size=16384");
+  }
+
   if (GCCInstallation.getParentLibPath().contains("opt/rh/"))
     // With devtoolset on RHEL, we want to add a bin directory that is relative
     // to the detected gcc install, because if we are using devtoolset gcc then
@@ -234,7 +239,7 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
   if (!IsMips && !IsHexagon) {
     if (Distro.IsRedhat() || Distro.IsOpenSUSE() || Distro.IsAlpineLinux() ||
         (Distro.IsUbuntu() && Distro >= Distro::UbuntuMaverick) ||
-        (IsAndroid && !Triple.isAndroidVersionLT(23)))
+        Distro.IsAtaraxiaLinux() || (IsAndroid && !Triple.isAndroidVersionLT(23)))
       ExtraOpts.push_back("--hash-style=gnu");
 
     if (Distro.IsDebian() || Distro.IsOpenSUSE() ||
@@ -663,8 +668,7 @@ void Linux::AddIAMCUIncludeArgs(const ArgList &DriverArgs,
 }
 
 bool Linux::isPIEDefault(const llvm::opt::ArgList &Args) const {
-  return CLANG_DEFAULT_PIE_ON_LINUX || getTriple().isAndroid() ||
-         getTriple().isMusl() || getSanitizerArgs(Args).requiresPIE();
+  return true;
 }
 
 bool Linux::IsAArch64OutlineAtomicsDefault(const ArgList &Args) const {
diff --git a/lib/Driver/ToolChains/Linux.h b/lib/Driver/ToolChains/Linux.h
index a5648d79..2a5485c5 100644
--- a/lib/Driver/ToolChains/Linux.h
+++ b/lib/Driver/ToolChains/Linux.h
@@ -45,6 +45,10 @@ public:
   bool
   IsAArch64OutlineAtomicsDefault(const llvm::opt::ArgList &Args) const override;
   bool isPIEDefault(const llvm::opt::ArgList &Args) const override;
+  LangOptions::StackProtectorMode
+  GetDefaultStackProtectorLevel(bool KernelOrKext) const override {
+    return LangOptions::SSPStrong;
+  }
   bool IsMathErrnoDefault() const override;
   SanitizerMask getSupportedSanitizers() const override;
   void addProfileRTLibs(const llvm::opt::ArgList &Args,
-- 
2.34.1

