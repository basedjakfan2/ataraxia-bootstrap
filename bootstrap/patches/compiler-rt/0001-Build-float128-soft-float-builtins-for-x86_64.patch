From dce9cfb6e612941757d0006ad21cd2c8d954cdb1 Mon Sep 17 00:00:00 2001
From: Taylor Berlioz <nagakamira@gmail.com>
Date: Sun, 24 Jul 2022 13:24:02 -0700
Subject: [PATCH] Build float128 soft float builtins for x86_64

Signed-off-by: Taylor Berlioz <nagakamira@gmail.com>
---
 lib/builtins/extenddftf2.c | 4 ++++
 lib/builtins/extendhftf2.c | 4 +---
 lib/builtins/fp_lib.h      | 7 ++++++-
 lib/builtins/powitf2.c     | 2 +-
 lib/builtins/trunctfdf2.c  | 3 ++-
 lib/builtins/trunctfhf2.c  | 4 +---
 lib/builtins/trunctfsf2.c  | 2 +-
 7 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/lib/builtins/extenddftf2.c b/lib/builtins/extenddftf2.c
index ddf470e..5b035b5 100644
--- a/lib/builtins/extenddftf2.c
+++ b/lib/builtins/extenddftf2.c
@@ -18,4 +18,8 @@ COMPILER_RT_ABI fp_t __extenddftf2(double a) {
   return __extendXfYf2__(a);
 }
 
+COMPILER_RT_ABI fp_t __extendxftf2(double a) {
+  return __extendXfYf2__(a);
+}
+
 #endif
diff --git a/lib/builtins/extendhftf2.c b/lib/builtins/extendhftf2.c
index aefe973..0240380 100644
--- a/lib/builtins/extendhftf2.c
+++ b/lib/builtins/extendhftf2.c
@@ -16,8 +16,6 @@
 #define DST_QUAD
 #include "fp_extend_impl.inc"
 
-COMPILER_RT_ABI long double __extendhftf2(_Float16 a) {
-  return __extendXfYf2__(a);
-}
+COMPILER_RT_ABI fp_t __extendhftf2(_Float16 a) { return __extendXfYf2__(a); }
 
 #endif
diff --git a/lib/builtins/fp_lib.h b/lib/builtins/fp_lib.h
index 3fb13a0..6d4e2e3 100644
--- a/lib/builtins/fp_lib.h
+++ b/lib/builtins/fp_lib.h
@@ -105,12 +105,17 @@ static __inline void wideMultiply(rep_t a, rep_t b, rep_t *hi, rep_t *lo) {
 COMPILER_RT_ABI fp_t __adddf3(fp_t a, fp_t b);
 
 #elif defined QUAD_PRECISION
-#if __LDBL_MANT_DIG__ == 113 && defined(__SIZEOF_INT128__)
+#if (__LDBL_MANT_DIG__ == 113 || defined(__x86_64__)) \
+    && defined(__SIZEOF_INT128__)
 #define CRT_LDBL_128BIT
 typedef uint64_t half_rep_t;
 typedef __uint128_t rep_t;
 typedef __int128_t srep_t;
+#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)
+typedef __float128 fp_t;
+#else
 typedef long double fp_t;
+#endif
 #define HALF_REP_C UINT64_C
 #define REP_C (__uint128_t)
 // Note: Since there is no explicit way to tell compiler the constant is a
diff --git a/lib/builtins/powitf2.c b/lib/builtins/powitf2.c
index 8e639a0..eecdefc 100644
--- a/lib/builtins/powitf2.c
+++ b/lib/builtins/powitf2.c
@@ -19,7 +19,7 @@
 
 COMPILER_RT_ABI long double __powitf2(long double a, int b) {
   const int recip = b < 0;
-  long double r = 1;
+  fp_t r = 1;
   while (1) {
     if (b & 1)
       r *= a;
diff --git a/lib/builtins/trunctfdf2.c b/lib/builtins/trunctfdf2.c
index 6857ea5..817172d 100644
--- a/lib/builtins/trunctfdf2.c
+++ b/lib/builtins/trunctfdf2.c
@@ -14,6 +14,7 @@
 #define DST_DOUBLE
 #include "fp_trunc_impl.inc"
 
-COMPILER_RT_ABI double __trunctfdf2(long double a) { return __truncXfYf2__(a); }
+COMPILER_RT_ABI double __trunctfdf2(fp_t a) { return __truncXfYf2__(a); }
+COMPILER_RT_ABI double __trunctfxf2(fp_t a) { return __truncXfYf2__(a); }
 
 #endif
diff --git a/lib/builtins/trunctfhf2.c b/lib/builtins/trunctfhf2.c
index e3a2309..cd56e0c 100644
--- a/lib/builtins/trunctfhf2.c
+++ b/lib/builtins/trunctfhf2.c
@@ -16,8 +16,6 @@
 #define DST_HALF
 #include "fp_trunc_impl.inc"
 
-COMPILER_RT_ABI _Float16 __trunctfhf2(long double a) {
-  return __truncXfYf2__(a);
-}
+COMPILER_RT_ABI _Float16 __trunctfhf2(fp_t a) { return __truncXfYf2__(a); }
 
 #endif
diff --git a/lib/builtins/trunctfsf2.c b/lib/builtins/trunctfsf2.c
index 0261b1e..f08f064 100644
--- a/lib/builtins/trunctfsf2.c
+++ b/lib/builtins/trunctfsf2.c
@@ -14,6 +14,6 @@
 #define DST_SINGLE
 #include "fp_trunc_impl.inc"
 
-COMPILER_RT_ABI float __trunctfsf2(long double a) { return __truncXfYf2__(a); }
+COMPILER_RT_ABI float __trunctfsf2(fp_t a) { return __truncXfYf2__(a); }
 
 #endif
-- 
2.34.1

